https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes

Commit a single file
git add .
git commit -m "Add existing file"
git push origin master

git clone https://github.com/carpedm20/DCGAN-tensorflow.git
git checkout -b mybranch
git commit -A (update all modified files)
git commit -m "comment"
git push ( upload to server)
git reset ( want to comeback to previous version)

ignore files:
$ cat .gitignore
*.a
doc/*.txt

#ignore all .a files
*.a

# ignore doc/notes.txt, but not doc/server/arch.txt
doc/*.txt

rename
git mv README.md README

git clone git@github.com:speechLabBcCuny/pyConcatResyn.git
Create Branch:
git checkout -b Autobi
Down branch Autobi from website to server
git pull origin Autobi
maybe need to
git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

you can run the git remote command.If you’ve cloned your repository,
you should at least see origin — that is the default name Git gives to the server you cloned from:

You can also specify -v, which shows you the URLs that Git has stored for the shortname
to be used when reading and writing to that remote:
git remote -v

Now you can use the string pb on the command line in lieu of the whole URL. 
For example, if you want to fetch all the information that Paul 
has but that you don’t yet have in your repository, you can run git fetch pb:
  
In local machine go to .ssh : cd ~/.ssh and 
cat id_rsa.pub
Copy the content of the file and add the public key to your github list of keys
With the public key
git clone git@github.com:speechLabBcCuny/bubbleAdversarialNetwork.git

warning: push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

Everything up-to-date

